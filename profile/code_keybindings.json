// Place your key bindings in this file to overwrite the defaults
[
    {
        "key": "shift+cmd+o",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+alt+`",
        "command": "workbench.action.terminal.focus"
    },
    {
        "key": "ctrl+cmd+left",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.navigateBack"
    },
    {
        "key": "ctrl+cmd+right",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "cmd+j",
        "command": "editor.action.goToDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f12",
        "command": "-editor.action.goToDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+cmd+j",
        "command": "editor.action.openDeclarationToTheSide",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+k f12",
        "command": "-editor.action.openDeclarationToTheSide",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "alt+cmd+j",
        "command": "editor.action.previewDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "alt+f12",
        "command": "-editor.action.previewDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+r",
        "command": "workbench.action.debug.start",
        "when": "!inDebugMode"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.start",
        "when": "!inDebugMode"
    },
    {
        "key": "cmd+r",
        "command": "flutter.hotRestart",
        "when": "dart-code:flutterProjectLoaded && inDebugMode"
    },
    {
        "key": "ctrl+f5",
        "command": "-flutter.hotRestart",
        "when": "dart-code:flutterProjectLoaded && inDebugMode"
    },
    {
        "key": "shift+cmd+j",
        "command": "-workbench.action.search.toggleQueryDetails",
        "when": "searchViewletVisible"
    },
    {
        "key": "shift+cmd+j",
        "command": "workbench.files.action.showActiveFileInExplorer"
    },
    {
        "key": "cmd+r",
        "command": "workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "shift+cmd+f5",
        "command": "-workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+alt+n",
        "command": "merge-conflict.next"
    },
    {
        "key": "ctrl+shift+alt+i",
        "command": "merge-conflict.accept.all-incoming"
    },
    {
        "key": "ctrl+shift+alt+n",
        "command": "merge-conflict.previous"
    },
    {
        "key": "ctrl+alt+c",
        "command": "merge-conflict.accept.current"
    },
    {
        "key": "ctrl+alt+b",
        "command": "merge-conflict.accept.both"
    },
    {
        "key": "ctrl+alt+i",
        "command": "merge-conflict.accept.incoming"
    },
    {
        "key": "ctrl+shift+alt+b",
        "command": "merge-conflict.accept.all-both"
    },
    {
        "key": "ctrl+shift+alt+c",
        "command": "merge-conflict.accept.all-current"
    }
]
